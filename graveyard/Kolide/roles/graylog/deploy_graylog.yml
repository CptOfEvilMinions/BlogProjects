####################################################################
# Setup hostname
####################################################################
- name: Set hostname
  ansible.builtin.hostname:
    name: '{{ graylog_hostname }}.{{ base_domain }}'

####################################################################
# Install software
####################################################################
- name: Install software
  ansible.builtin.package:
    name: '{{ item }}'
    state: latest
  with_items:
    - apt-transport-https
    - openjdk-8-jre-headless
    - uuid-runtime
    - pwgen

####################################################################
# Install/Setup MongoDB
####################################################################
- name: Install MongoDB
  ansible.builtin.package:
    name: '{{ item }}'
    state: latest
  with_items:
    - mongodb-server

- name: Start Mongo service
  ansible.builtin.service:
    name: mongodb
    state: started
    enabled: true

####################################################################
# Install/Setup Elasticsearch
####################################################################
- name: Add Elastic GPG key
  ansible.builtin.apt_key:
    url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
    state: present

- name: Add Elastic repo
  ansible.builtin.apt_repository:
    repo: deb https://artifacts.elastic.co/packages/6.x/apt stable main
    state: present

- name: Install/Setup Elasticsearch
  ansible.builtin.package:
    name: '{{ item }}'
    state: latest
  with_items:
    - curl
    - elasticsearch

- name: Rename Elasticsearch cluster name
  ansible.builtin.lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^cluster.name:'
    line: 'cluster.name: graylog'

- service:
    name: elasticsearch
    state: restarted
    enabled: true

####################################################################
# Install/Setup Graylog
####################################################################
- name: Download and Install Graylog repo
  ansible.builtin.apt:
    deb: https://packages.graylog2.org/repo/packages/graylog-2.4-repository_latest.deb

- name: Run the equivalent of "apt-get update" as a separate step
  ansible.builtin.apt:
    update_cache: true

- name: Install/Setup Graylog
  ansible.builtin.package:
    name: '{{ item }}'
    state: latest
  with_items:
    - graylog-server

- name: Covert password to sha256 hash
  ansible.builtin.shell: "echo -n {{ graylog_admin_password }} | sha256sum | awk '{print $1}'"
  register: pass_contents

- name: Set admin password
  ansible.builtin.lineinfile:
    path: /etc/graylog/server/server.conf
    regexp: '^root_password_sha2 ='
    line: "root_password_sha2 = {{ pass_contents.stdout }}"

- name: Generate secret key
  ansible.builtin.shell: "pwgen -s 96 1"
  register: secret_key_content

- name: Set secret key
  ansible.builtin.shell: sed -i -e "s/password_secret =.*/password_secret = {{ secret_key_content.stdout }}/" /etc/graylog/server/server.conf

- name: Start and Enable Graylog service
  ansible.builtin.service:
    name: graylog-server
    state: restarted
    enabled: true

####################################################################
# Install/Setup Graylog slack plugin
####################################################################
- name: Download Graylog Slack plugin
  ansible.builtin.get_url:
    url: https://github.com/graylog-labs/graylog-plugin-slack/releases/download/2.4.0/graylog-plugin-slack-2.4.0.jar
    dest: /usr/share/graylog-server/plugin/graylog-plugin-slack-2.4.0.jar

- name: Start and Enable Graylog service
  ansible.builtin.service:
    name: graylog-server
    state: restarted
    enabled: true

####################################################################
# Install/Setup Nginx
####################################################################
- name: Install/Setup Nginx
  ansible.builtin.package:
    name: '{{ item }}'
    state: installed
  with_items:
    - nginx

- name: Backup NGINX config
  ansible.builtin.shell: cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak

- name: Copy Nginx config
  ansible.builtin.template:
    src: conf/nginx/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: '0600'

- file:
    path: /etc/nginx/ssl
    owner: root
    group: root
    state: directory

- file:
    path: /etc/nginx/ssl
    state: directory
    mode: "0755"

- name: Generate DH key
  ansible.builtin.stat:
    path: /etc/ssl/certs/dhparam.pem
  register: stat_dhparam
- shell: openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048
  when: not stat_dhparam.stat.exists

- name: Generate DH key
  ansible.builtin.stat:
    path: /etc/nginx/ssl/dhparam.pem
  register: stat_dhparam
- shell: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
  when: not stat_dhparam.stat.exists
- shell: |
    openssl req -new -nodes -x509 -days 3650 \
    -subj "/C={{ cert_country }}/ST={{ cert_state }}/L={{ cert_local }}/O={{ cert_org }}/CN={{ graylog_hostname }}.{{ base_domain }}" \
    -keyout /etc/nginx/ssl/graylog.key \
    -out /etc/nginx/ssl/graylog.crt
  when: not stat_dhparam.stat.exists

- template:
    src: conf/nginx/nginx_graylog.conf
    dest: /etc/nginx/conf.d/nginx_graylog.conf
    owner: root
    group: root
    mode: '0600'

- service:
    name: nginx
    state: restarted
    enabled: true

####################################################################
# Install/Setup FirewallD
####################################################################
- name: Setup Ubuntu UFW firewall
  community.general.ufw:
    rule: allow
    name: OpenSSH
- community.general.ufw:
    rule: allow
    port: 80
    proto: tcp
- community.general.ufw:
    rule: allow
    port: 443
    proto: tcp
- community.general.ufw:
    rule: allow
    port: 5044
    proto: tcp
- community.general.ufw:
    state: enabled
    policy: deny
